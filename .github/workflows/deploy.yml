name: Build & Deploy to EC2

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Maven repo
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: m2-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: m2-${{ runner.os }}-

      - name: Build (Maven)
        run: mvn -B -q clean package

      - name: Find fat jar
        id: jar
        run: |
          JAR=$(ls target/*jar-with-dependencies.jar | head -n1)
          echo "path=$JAR" >> $GITHUB_OUTPUT

      - name: Prepare SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Copy artifact to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i key.pem "${{ steps.jar.outputs.path }}" \
            "${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/tmp/snake-game.jar"

      - name: Install/Restart service on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem "${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}" <<'EOSSH'
            set -e
            APP_DIR="${EC2_APP_DIR:-/opt/snake}"
            sudo mkdir -p "$APP_DIR"
            sudo mv /tmp/snake-game.jar "$APP_DIR/snake-game.jar"
            sudo chown -R $(whoami):$(whoami) "$APP_DIR" || true
            # make sure unit exists and reload
            sudo systemctl daemon-reload
            sudo systemctl enable snake.service
            sudo systemctl restart snake.service
            sudo systemctl --no-pager status snake.service | sed -n '1,20p'
          EOSSH
