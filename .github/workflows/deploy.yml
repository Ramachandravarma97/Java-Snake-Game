name: Build & Deploy Snake (Swing) to EC2

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build fat JAR (no Maven needed)
        shell: bash
        run: |
          set -e
          mkdir -p build/classes
          # Compile everything under src/com/zetcode
          javac -d build/classes $(find src -type f -name '*.java')
          # Pack resources if present
          if [ -d resources ]; then
            jar --create --file snake-game.jar \
                --main-class=com.zetcode.Snake \
                -C build/classes . \
                -C resources .
          else
            jar --create --file snake-game.jar \
                --main-class=com.zetcode.Snake \
                -C build/classes .
          fi
          ls -lh snake-game.jar

      - name: Write SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Copy artifact to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i key.pem snake-game.jar \
            "${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/tmp/snake-game.jar"

      - name: Bootstrap & Deploy on EC2 (idempotent)
        env:
          APP_DIR: ${{ secrets.EC2_APP_DIR }}
          VNC_PASSWORD: ${{ secrets.VNC_PASSWORD }}
        run: |
          APP_DIR="${APP_DIR:-/opt/snake}"
          ssh -o StrictHostKeyChecking=no -i key.pem "${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}" \
            "export APP_DIR='$APP_DIR' VNC_PASSWORD='${VNC_PASSWORD}'; bash -s" <<'EOSSH'
            set -euo pipefail

            RUN_USER=${USER}   # current SSH user (e.g., ubuntu)
            APP_DIR="${APP_DIR:-/opt/snake}"

            # 1) Install packages (safe to re-run)
            if ! command -v java >/dev/null 2>&1; then
              sudo apt-get update -y
              sudo apt-get install -y openjdk-17-jre
            fi
            for P in xvfb x11vnc fluxbox; do
              if ! command -v "$P" >/dev/null 2>&1; then
                sudo apt-get install -y "$P"
              fi
            done

            # 2) App dir + JAR
            sudo mkdir -p "$APP_DIR"
            sudo mv /tmp/snake-game.jar "$APP_DIR/snake-game.jar"
            sudo chown -R "$RUN_USER:$RUN_USER" "$APP_DIR"

            # 3) VNC password (non-interactive)
            if [ -n "${VNC_PASSWORD:-}" ]; then
              sudo -u "$RUN_USER" mkdir -p "/home/$RUN_USER/.vnc"
              sudo -u "$RUN_USER" x11vnc -storepasswd "$VNC_PASSWORD" "/home/$RUN_USER/.vnc/passwd" >/dev/null
              sudo chmod 600 "/home/$RUN_USER/.vnc/passwd"
            fi

            # 4) systemd units (idempotent)

            # Xvfb
            sudo tee /etc/systemd/system/xvfb.service >/dev/null <<EOF
            [Unit]
            Description=Virtual X Server :1
            After=network.target
            [Service]
            User=$RUN_USER
            Environment=DISPLAY=:1
            ExecStart=/usr/bin/Xvfb :1 -screen 0 1280x800x24
            Restart=always
            [Install]
            WantedBy=multi-user.target
            EOF

            # Fluxbox WM
            sudo tee /etc/systemd/system/fluxbox.service >/dev/null <<EOF
            [Unit]
            Description=Fluxbox WM on :1
            After=xvfb.service
            [Service]
            User=$RUN_USER
            Environment=DISPLAY=:1
            ExecStart=/usr/bin/fluxbox
            Restart=always
            [Install]
            WantedBy=multi-user.target
            EOF

            # x11vnc (VNC on 5901)
            sudo tee /etc/systemd/system/x11vnc.service >/dev/null <<EOF
            [Unit]
            Description=x11vnc on :1
            After=fluxbox.service
            [Service]
            User=$RUN_USER
            Environment=DISPLAY=:1
            ExecStart=/usr/bin/x11vnc -display :1 -rfbport 5901 -forever -usepw -shared
            Restart=always
            [Install]
            WantedBy=multi-user.target
            EOF

            # Snake app
            sudo tee /etc/systemd/system/snake.service >/dev/null <<EOF
            [Unit]
            Description=Snake Game (Swing) via Xvfb
            After=x11vnc.service
            [Service]
            User=$RUN_USER
            Environment=DISPLAY=:1
            WorkingDirectory=$APP_DIR
            ExecStart=/usr/bin/java -jar $APP_DIR/snake-game.jar
            Restart=on-failure
            [Install]
            WantedBy=multi-user.target
            EOF

            # 5) Enable + start everything
            sudo systemctl daemon-reload
            sudo systemctl enable --now xvfb.service fluxbox.service x11vnc.service snake.service

            # 6) Show quick status
            systemctl --no-pager --type=service --state=running | grep -E 'xvfb|fluxbox|x11vnc|snake' || true
          EOSSH
